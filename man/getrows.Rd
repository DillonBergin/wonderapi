% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getData.R
\name{getrows}
\alias{getrows}
\title{makequerytable() takes as input query_result (XML output file of CDC wonder query request produced by wondr package) and returns a tibble
It is intended to replace the script with the same purpose provided in the wondr package readme file
https://github.com/hrbrmstr/wondr
xml_find_all(query_result, ".//response/data-table/r") %>%
map_df(function(row) {
    xml_find_all(row, ".//c") %>%
        xml_attrs() %>%
        as.list() %>%
        setNames(sprintf("V%d", 1:length(.))) %>%
        as.data.frame(stringsAsFactors=FALSE)
}) %>%
    tibble::as.tibble()
The above script works for the example since each row of the table has the same number of columns
(See the <data-table ...> node here:
https://wonder.cdc.gov/wonder/help/API-Examples/D76_Example2-resp.xml
This function is designed to work for query results with varying number of columns per row}
\usage{
getrows(thisrow, numcol)
}
\description{
makequerytable() takes as input query_result (XML output file of CDC wonder query request produced by wondr package) and returns a tibble
It is intended to replace the script with the same purpose provided in the wondr package readme file
https://github.com/hrbrmstr/wondr
xml_find_all(query_result, ".//response/data-table/r") %>%
map_df(function(row) {
    xml_find_all(row, ".//c") %>%
        xml_attrs() %>%
        as.list() %>%
        setNames(sprintf("V%d", 1:length(.))) %>%
        as.data.frame(stringsAsFactors=FALSE)
}) %>%
    tibble::as.tibble()
The above script works for the example since each row of the table has the same number of columns
(See the <data-table ...> node here:
https://wonder.cdc.gov/wonder/help/API-Examples/D76_Example2-resp.xml
This function is designed to work for query results with varying number of columns per row
}
